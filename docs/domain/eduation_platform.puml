@startuml education_platform

  title Education Platform Domain

  class EducationPlatform

  package Itineraries {
    class Itinerary
    EducationPlatform *--> Itinerary : baseItinerary
    EducationPlatform o--> "*" Itinerary

    abstract class Topic
    Itinerary o--> "*" Topic
    EducationPlatform *--> Topic : baseTopic

    class CompoundTopic
    Topic <|-down- CompoundTopic
    CompoundTopic o--> "*" Topic

    class SimpleTopic
    Topic <|-down- SimpleTopic

    package Relations {
      class Relation
      SimpleTopic o--> "*" Relation

      enum RelationType {
        + Inheritance
        + Composition
        + Aggregation
        + Association
        + Use
      }
      Relation *--> RelationType
    }

    package InformationUnits {
      abstract class InformationUnit
      SimpleTopic o--> "*" InformationUnit

      class Text
      InformationUnit <|-down- Text
      class Video
      InformationUnit <|-down- Video
      Video o--> "?" Text : transcription

      class Podcast
      InformationUnit <|-down- Podcast
      Video o--> "?" Podcast

      class Imagen
      InformationUnit <|-down- Imagen
    }

    package Concepts {
      class Concept {
        + string name
      }
      SimpleTopic o--> "*" Concept
      Relation --> Concept : originConcept
      Relation --> Concept : destinationConcept

      class Definition
      Concept o--> "*" Definition

      class Justification {
        + bool isCorrect
      }
      Text <|-down- Justification
      Definition o--> "*" Justification
    }

    package Exercises {
      class ProgrammingExercise
      SimpleTopic --> "*" ProgrammingExercise
      Itinerary o--> "*" ProgrammingExercise
      ProgrammingExercise --> "*" Concept

      class Statement
      ProgrammingExercise o--> "*" Statement : versionedStatements

      class Answer {
        + bool isCorrect
      }
      Text <|-down- Answer
      Answer <|-down- Definition
      Statement --> Answer : application
      ProgrammingExercise o--> "*" Answer : versionedApplications
    }
  }

  ' ------------------- Chat and questions ------------------- '

  package Questions {
    class Chat
    EducationPlatform o--> "*" Chat

    abstract class Question
    EducationPlatform o--> "*" Question
    Chat --> "*" Question
    Question --> Concept

    abstract class OpenQuestion
    Question <|-down- OpenQuestion
    OpenQuestion o--> Definition

    class FillDefinitionQuestion {
      + addDefinition() : void
    }
    class JustifyConceptQuestion {
      + addJustification() : void
    }
    OpenQuestion <|-down- JustifyConceptQuestion
    OpenQuestion <|-down- FillDefinitionQuestion

    class BestApplicationQuestion
    Question <|-down- BestApplicationQuestion
    BestApplicationQuestion ..> "2" Answer
    BestApplicationQuestion --> ProgrammingExercise

    enum ProgrammingPrinciple {
      + SingleResponsibility
      + AcyclicDependencies
      + CommonClosure
      + InterfaceSegregation
      + ...
    }
    BestApplicationQuestion *--> ProgrammingPrinciple
  }

  ' ------------------- Actors ------------------- '

  package Users {
    abstract class User
    EducationPlatform o--> "*" User

    class Teacher
    User <|-down- Teacher
    Itinerary --> Teacher : creator
    OpenQuestion --> "?" Teacher : checker

    class Student
    User <|-down- Student

    class Progress {
      + int timeInMinutesSpentInVideos
      + int timeInMinutesSpentInChatQuestions
      + int percentageComplete
    }

    class StudentSubscription
    StudentSubscription *--> Student
    StudentSubscription *--> Progress
    Itinerary o--> "*" StudentSubscription : subscribers
    Chat o--> StudentSubscription
  }

@enduml