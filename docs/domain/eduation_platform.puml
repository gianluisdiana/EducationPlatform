@startuml education_platform

  class Student {
    + getSubItinerary(Itinerary) : Itinerary
    + reorderItinerary(Itinerary) : Itinerary
  }

  class Itinerary

  Student --> Itinerary

  class Teacher {
    + addTopic(Itinerary) : Itinerary
    + deleteTopic(Itinerary) : Itinerary
    + examineStudentRegister(StudentRegister) : void
  }

  Teacher o--> "*" Itinerary

  abstract class Topic
  class CompoundTopic
  class Index

  Student <|-down- Teacher

  abstract class InformationUnit

  InformationUnit <|-down- Text
  InformationUnit <|-down- Video
  InformationUnit <|-down- Podcast
  InformationUnit <|-down- Imagen

  SimpleTopic o--> "*" InformationUnit
  SimpleTopic *--> Video : classVideo
  SimpleTopic *--> Text : transcription

  Teacher ..> Topic

  CompoundTopic o--> "+" Topic
  CompoundTopic *--> Index

  Topic <|-- CompoundTopic
  Topic <|-- SimpleTopic

  Index --> "+" Topic

  Itinerary o--> "+" Topic

  EducationPlatform o--> "*" Student
  EducationPlatform o--> "+" Teacher
  EducationPlatform *--> Itinerary : baseItinerary
  EducationPlatform o--> "*" Itinerary

  class Concept {
    + string name
  }

  SimpleTopic o--> "+" Concept

  Concept o--> "+" Text : definitions
  Concept o--> "*" Text : wrongDefinitions
  Concept o--> "*" RelationType

  Relation *--> RelationType
  Relation --> Concept : originConcept
  Relation --> Concept : destinationConcept

  SimpleTopic o--> "*" RelationType
  enum RelationType {
    Use
    Association
    Composition
    Inheritance
    Aggregation
  }

  class Chat

  abstract class Question

  Chat o--> "*" Question

  EducationPlatform *--> Chat

  Student --> Chat

  Concept o--> "*" JustifiableAnswer : wrongAnswers
  Concept o--> "*" JustifiableAnswer : rightAnswers

  JustifiableAnswer o--> "*" Justification : wrongJustifications
  JustifiableAnswer o--> "*" Justification : rightJustifications

  class JustifiableAnswer

  class ProgrammingExercise
  class DomainApplication

  abstract class Answer
  Answer <|-- JustifiableAnswer
  Answer <|-- DomainApplication

  DomainStatement o--> "*" DomainApplication : rightAnswers
  DomainStatement o--> "*" DomainApplication : wrongAnswers

  class StudentRegister {
    + int timeInMinutesExpentInVideos
    + int timeInMinutesExpentInChatQuestions
    + int percentageCompleted
  }

  SimpleTopic o--> "*" ProgrammingExercise
  SimpleTopic o--> "*" Relation

  Student *--> StudentRegister
  Teacher ..> StudentRegister
  StudentRegister --> Itinerary

  ProgrammingExercise o--> "+" DomainStatement : versionedStatements
  ProgrammingExercise --> "*" Concept

@enduml